inputs:

  existing_salt_master:
    default: false

relationships:

  cloudify.relationships.Salt.connected_to:
    derived_from: cloudify.relationships.depends_on
    target_interfaces:
      cloudify.interfaces.relationship_lifecycle:
        establish: scripts/salt/establish.py

node_types:

  cloudify.nodes.Salt.Master:
    derived_from: cloudify.nodes.Root
    properties:
      use_external_resource:
        default: false
    interfaces:
      cloudify.interfaces.lifecycle:
        configure:
          implementation: scripts/salt/configure_master.py

node_templates:

  salt_master:
    type: cloudify.nodes.Salt.Master
    properties:
      use_external_resource: { get_input: existing_salt_master }
    relationships:
      - type: cloudify.relationships.contained_in
        target: master_host

  salt_minion:
    type: cloudify.nodes.Root
    interfaces:
      cloudify.interfaces.lifecycle:
        configure:
          implementation: scripts/salt/configure_minion.py
          inputs:
            interface: { get_attribute: [ master_host, ip ] }
            master_finger: { get_attribute: [ salt_master, master_finger ] }
    relationships:
      - type: cloudify.relationships.contained_in
        target: minion_host
      - type: cloudify.relationships.Salt.connected_to
        target: salt_master
